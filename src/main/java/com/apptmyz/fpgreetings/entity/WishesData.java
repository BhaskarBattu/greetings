/*
 * Created on 11 Oct 2022 ( Time 22:31:59 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.apptmyz.fpgreetings.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "wishes_data"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="wishes_data", catalog="greetings" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="WishesData.countAll", query="SELECT COUNT(x) FROM WishesData x" )
} )
public class WishesData implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="user_reg_id")
    private Integer    userRegId    ;

    @Column(name="to_email", length=150)
    private String     toEmail      ;

    @Temporal(TemporalType.DATE)
    @Column(name="bday_date")
    private Date       bdayDate     ;

    @Lob
    @Column(name="greeting")
    private byte[]     greeting     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_timestamp")
    private Date       createdTimestamp ;

    @Column(name="active_flag")
    private Integer    activeFlag   ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public WishesData()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id )
    {
        this.id = id ;
    }
    public Integer getId()
    {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : user_reg_id ( INT ) 
    public void setUserRegId( Integer userRegId )
    {
        this.userRegId = userRegId;
    }
    public Integer getUserRegId()
    {
        return this.userRegId;
    }

    //--- DATABASE MAPPING : to_email ( VARCHAR ) 
    public void setToEmail( String toEmail )
    {
        this.toEmail = toEmail;
    }
    public String getToEmail()
    {
        return this.toEmail;
    }

    //--- DATABASE MAPPING : bday_date ( DATE ) 
    public void setBdayDate( Date bdayDate )
    {
        this.bdayDate = bdayDate;
    }
    public Date getBdayDate()
    {
        return this.bdayDate;
    }

    //--- DATABASE MAPPING : greeting ( BLOB ) 
    public void setGreeting( byte[] greeting )
    {
        this.greeting = greeting;
    }
    public byte[] getGreeting()
    {
        return this.greeting;
    }

    //--- DATABASE MAPPING : created_timestamp ( DATETIME ) 
    public void setCreatedTimestamp( Date createdTimestamp )
    {
        this.createdTimestamp = createdTimestamp;
    }
    public Date getCreatedTimestamp()
    {
        return this.createdTimestamp;
    }

    //--- DATABASE MAPPING : active_flag ( INT ) 
    public void setActiveFlag( Integer activeFlag )
    {
        this.activeFlag = activeFlag;
    }
    public Integer getActiveFlag()
    {
        return this.activeFlag;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(userRegId);
        sb.append("|");
        sb.append(toEmail);
        sb.append("|");
        sb.append(bdayDate);
        // attribute 'greeting' not usable (type = byte[])
        sb.append("|");
        sb.append(createdTimestamp);
        sb.append("|");
        sb.append(activeFlag);
        return sb.toString(); 
    } 

}
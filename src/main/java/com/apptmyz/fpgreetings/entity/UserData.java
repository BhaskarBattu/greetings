/*
 * Created on 11 Oct 2022 ( Time 22:31:58 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.apptmyz.fpgreetings.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "user_data"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="user_data", catalog="greetings" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="UserData.countAll", query="SELECT COUNT(x) FROM UserData x" )
} )
public class UserData implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="email", length=150)
    private String     email        ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_timestamp")
    private Date       createdTimestamp ;

    @Column(name="active_flag")
    private Integer    activeFlag   ;

    @Column(name="created_by", length=45)
    private String     createdBy    ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public UserData()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id )
    {
        this.id = id ;
    }
    public Integer getId()
    {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : email ( VARCHAR ) 
    public void setEmail( String email )
    {
        this.email = email;
    }
    public String getEmail()
    {
        return this.email;
    }

    //--- DATABASE MAPPING : created_timestamp ( DATETIME ) 
    public void setCreatedTimestamp( Date createdTimestamp )
    {
        this.createdTimestamp = createdTimestamp;
    }
    public Date getCreatedTimestamp()
    {
        return this.createdTimestamp;
    }

    //--- DATABASE MAPPING : active_flag ( INT ) 
    public void setActiveFlag( Integer activeFlag )
    {
        this.activeFlag = activeFlag;
    }
    public Integer getActiveFlag()
    {
        return this.activeFlag;
    }

    //--- DATABASE MAPPING : created_by ( VARCHAR ) 
    public void setCreatedBy( String createdBy )
    {
        this.createdBy = createdBy;
    }
    public String getCreatedBy()
    {
        return this.createdBy;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(email);
        sb.append("|");
        sb.append(createdTimestamp);
        sb.append("|");
        sb.append(activeFlag);
        sb.append("|");
        sb.append(createdBy);
        return sb.toString(); 
    } 

}